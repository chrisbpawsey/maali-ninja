##############################################################################
# $Id: beast.build,v 1.5 2013/12/18 04:09:03 stapops Exp $
##############################################################################
# ibs config file for Beast
##############################################################################

# specify which compilers we want to build the tool with
IBS_TOOL_COMPILERS="$IBS_DEFAULT_COMPILERS"

IBS_TOOL_VERSION_MAJOR=`echo "$IBS_TOOL_VERSION" | cut -d '.' -f 1`

if [ $IBS_TOOL_VERSION_MAJOR -ge 2 ]; then 
  # URL to download the source code from
  IBS_URL="http://beast2.googlecode.com/files/BEAST%20v$IBS_TOOL_VERSION.tgz"

  # location we are downloading the source code to
  IBS_DST="$IBS_SRC/BEAST%20v$IBS_TOOL_VERSION.tgz"

  # where the unpacked source code is located
  IBS_TOOL_BUILD_DIR="$IBS_BUILD_DIR/BEAST"
else
  # URL to download the source code from
  IBS_URL="http://beast-mcmc.googlecode.com/files/BEASTv$IBS_TOOL_VERSION.tgz"

  # location we are downloading the source code to
  IBS_DST="$IBS_SRC/BEASTv$IBS_TOOL_VERSION.tgz"

  # where the unpacked source code is located
  IBS_TOOL_BUILD_DIR="$IBS_BUILD_DIR/BEASTv$IBS_TOOL_VERSION"
fi

# type of tool (eg. apps, devel, python, etc.)
IBS_TOOL_TYPE="bio-apps"

# tool pre-requisites
IBS_TOOL_PREREQ="java/8u40  beagle-lib/1.1"

# for auto-building module files
MAALI_MODULE_SET_SETENV="BEAST_DIR=${MAALI_INSTALL_DIR}"
MAALI_MODULE_SET_SETENV="BEAST_LIB=${MAALI_INSTALL_DIR}/lib"
MAALI_MODULE_SET_PATH=1
MAALI_MODULE_SET_LD_LIBRARY_PATH=1
MAALI_MODULE_WHATIS="Bayesian evolutionary analysis by sampling trees-(BEAST)2 is a cross-platform program for Bayesian phylogenetic analysis of molecular sequences."

##############################################################################

function maali_build {
  cd "$MAALI_TOOL_BUILD_DIR"

  if [ $MAALI_TOOL_VERSION_MAJOR -lt 2 ]; then 
    cd native

    #Stupid Beast, developers pacakged mac object files by default on 1.8.0
    rm -rf $MAALI_TOOL_BUILD_DIR/native/*.o

    if [ "$MAALI_COMPILER_NAME" == "intel" ]; then
      maali_run "make -f Makefile.icc"
    elif [ "$MAALI_COMPILER_NAME" == "gcc" ]; then
      maali_run "make -f Makefile.linux"
    else
      echo "Only gcc and intel are supported"
      exit 1;
    fi
    maali_run "mv libNucleotideLikelihoodCore.so ../lib/"
    maali_run "rm -f ../lib/libNucleotideLikelihoodCore32.so"

    cd ..
  fi

  maali_run "mkdir -p $MAALI_INSTALL_DIR/"

  if [ $MAALI_TOOL_VERSION_MAJOR -lt 2 ]; then 
    maali_run "mv bin doc examples images lib *.txt $MAALI_INSTALL_DIR"
    cat <<EOF >"$MAALI_INSTALL_DIR/bin/beast"
#!/bin/bash

java -Xms64m -Xmx1024m -Djava.library.path="\$BEAST_LIB:\$BEAGLE_LIB_DIR/lib" -cp "\$BEAST_LIB/beast.jar:\$BEAST_LIB/beast-beagle.jar" dr.app.beast.BeastMain \$*
EOF
  else
    maali_run "mv bin examples images lib *.txt $MAALI_INSTALL_DIR"

    cat <<EOF >"$MAALI_INSTALL_DIR/bin/beast"
#!/bin/bash

java -Xms256m -Xmx1024m -Djava.library.path="\$BEAST_LIB" -cp "\$BEAST_LIB/beast.jar" beast.app.beastapp.BeastMain $*
EOF
  fi

  maali_run "chmod 755 $MAALI_INSTALL_DIR/bin/beast"

}

##############################################################################

function ibs_module {

cat <<EOF >$IBS_TOOL_MODULE
#%Module######################################################################
#
# $IBS_TOOL modulefile
#
proc ModulesHelp { } {
  puts stderr "Sets up the paths you need to use $IBS_TOOL version $version"
}
set sys     [uname sysname]
set version $IBS_TOOL_VERSION
set tool    $IBS_TOOL_NAME
if { [is-loaded \$tool] && ! [is-loaded \$tool/\$version] } {
  module unload \$tool
}

# need to check the compiler is defined

module load java/1.6.0_38
module load beagle-lib/1.1

setenv       BEAST_DIR       $IBS_APPS_DIR/\$env(COMPILER)/\$env(COMPILER_VER)/$IBS_TOOL_NAME/$IBS_TOOL_VERSION
setenv       BEAST_LIB       $IBS_APPS_DIR/\$env(COMPILER)/\$env(COMPILER_VER)/$IBS_TOOL_NAME/$IBS_TOOL_VERSION/lib

prepend-path PATH            $IBS_APPS_DIR/\$env(COMPILER)/\$env(COMPILER_VER)/$IBS_TOOL_NAME/$IBS_TOOL_VERSION/bin
prepend-path LD_LIBRARY_PATH $IBS_APPS_DIR/\$env(COMPILER)/\$env(COMPILER_VER)/$IBS_TOOL_NAME/$IBS_TOOL_VERSION/lib
EOF
}

##############################################################################
