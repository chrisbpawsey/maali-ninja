##############################################################################
# $Id: siesta.build,v 1.2 2015/01/23 02:18:25 stapops Exp $
##############################################################################
# maali config file for siesta
##############################################################################

# specify which compilers we want to build the tool with
MAALI_TOOL_COMPILERS="PrgEnv-intel/5.2.25"

# URL to download the source code from
MAALI_URL="http://departments.icmab.es/leem/siesta/CodeAccess/Code/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION.tgz"

# location we are downloading the source code to
MAALI_DST="$MAALI_SRC/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION.tar.gz"

# where the unpacked source code is located
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION"

# tool pre-requisites
MAALI_TOOL_PREREQ="cray-netcdf/4.3.2"
MAALI_TOOL_BUILD_PREREQ="cray-mpich/7.0.0 alps"

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="apps"

# for auto-building module files
MAALI_MODULE_SET_PATH=1

##############################################################################

function maali_build {
  # this is the core function for creating software

  #patch
  cd "$MAALI_TOOL_BUILD_DIR/"
  maali_run "patch -p1 < $MAALI_FILES_PATH/$MAALI_TOOL_NAME.galaxy.patch"
  #uncomment for mkl build
  #module unload cray-libsci
  cd "$MAALI_TOOL_BUILD_DIR/Obj"
  maali_run "sh ../Src/obj_setup.sh"
  #use for mkl
  #maali_run "cp $MAALI_FILES_PATH/$MAALI_TOOL_NAME.galaxy.arch.intel-mkl.make arch.make"
  #use for libsci
  maali_run "cp $MAALI_FILES_PATH/$MAALI_TOOL_NAME.galaxy.arch.intel-libsci.make arch.make"
  maali_run "make"
  maali_run "/usr/bin/install -c ./siesta -D $MAALI_INSTALL_DIR/bin/siesta"
}

##############################################################################
