##############################################################################
# $Id: gromacs.build,v 1.11 2015/03/17 02:58:19 stapops Exp $
##############################################################################
# maali config file for gromacs (autoconf versions prior to 4.6)
##############################################################################

# specify which compilers we want to build the tool with
MAALI_TOOL_COMPILERS="$MAALI_DEFAULT_GCC_COMPILERS $MAALI_DEFAULT_INTEL_COMPILERS"

# URL to download the source code from
MAALI_URL="ftp://ftp.gromacs.org/pub/gromacs/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION.tar.gz"

# location we are downloading the source code to
MAALI_DST="$MAALI_SRC/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION.tar.gz"

# where the unpacked source code is located
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION"

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="apps"

MAALI_EXTRA_CRAY="craype-sandybridge"

MAALI_TOOL_PREREQ="fftw cray-mpich"
if [ $MAALI_TOOL_VERSION == 3.3.3 ]; then
  MAALI_TOOL_BUILD_PREREQ=""
elif [ $MAALI_TOOL_VERSION == 4.0.7 ]; then
  MAALI_TOOL_BUILD_PREREQ=""
else
  MAALI_TOOL_BUILD_PREREQ="cmake"
fi

MAALI_MODULE_SET_PATH=1
MAALI_MODULE_SET_MANPATH=1
MAALI_MODULE_WHATIS='GROMACS is a versatile package to perform molecular dynamics, i.e. simulate the Newtonian equations of motion for systems with hundreds to millions of particles.'

export LDFLAGS="-dynamic"

if [ $MAALI_TOOL_VERSION == 3.3.3 ]; then
  MAALI_TOOL_CONFIGURE='--with-fft=fftw3 --with-external-blas --with-external-lapack --host=x86_64'
elif [ $MAALI_TOOL_VERSION == 4.0.7 ]; then
  MAALI_TOOL_CONFIGURE='--with-fft=fftw3 --with-external-blas --with-external-lapack --host=x86_64'
else
  MAALI_TOOL_CONFIGURE='-DEXTRA_C_FLAGS=-hnoomp -DGMX_MPI=ON -DGMX_OPENMP=OFF -DFFTWF_INCLUDE_DIR=$FFTW_INC -DFFTW3_LIBRARIES=$FFTW_DIR -DFFTW3F_INCLUDE_DIR=$FFTW_INC -DFFTW3_INCLUDE_DIR=$FFTW_INC -DGMX_FFT_LIBRARY=fftw3 -DGMX_PREFER_STATIC_LIBS=ON -DCMAKE_SKIP_RPATH=ON --host=x86_64 -DCMAKE_C_SIZEOF_DATA_PTR=8'
fi

# Hmmm backportng from the era of Epic and Foranx
# mix builds, older gromacs don't use cmake and had different mix builds
# take --enable-mpi out of MAALI_TOOL_CONFIGURE as you want mix builds with and without mpi and place the switch in maali_build
function maali_build {
    # this is the core function for creating software

    # allows late evaluation
    MAALI_TOOL_CONFIGURE_EVAL=`eval echo "$MAALI_TOOL_CONFIGURE"`

    cd "$MAALI_TOOL_BUILD_DIR"

    #Normal single precision
    maali_run "./configure --prefix=$MAALI_INSTALL_DIR $MAALI_TOOL_CONFIGURE_EVAL"
    maali_run "make"
    maali_run "make install"

    #single precision / mpi
    maali_run "make clean"
    maali_run "./configure --prefix=$MAALI_INSTALL_DIR --enable-mpi --program-suffix=_mpi $MAALI_TOOL_CONFIGURE_EVAL --enable-mpi"
    maali_run "make mdrun"
    maali_run "make install-mdrun"

    #Normal double precision
    maali_run "make clean"
    maali_run "./configure --prefix=$MAALI_INSTALL_DIR $MAALI_TOOL_CONFIGURE_EVAL --enable-double --program-suffix=_d"
    maali_run "make"
    maali_run "make install"

    #double precision / mpi
    maali_run "make clean"
    maali_run "./configure --prefix=$MAALI_INSTALL_DIR --enable-mpi --program-suffix=_mpi_d $MAALI_TOOL_CONFIGURE_EVAL --enable-mpi --enable-double"
    maali_run "make mdrun"
    maali_run "make install-mdrun"


}



function maali_cmake_build {
  # for tools that use cmake

  # allows late evaluation
  MAALI_TOOL_CONFIGURE_EVAL=`eval echo "$MAALI_TOOL_CONFIGURE"`

  # Work around Cray not setting up pkg-config for user applications.
  target="PE_FFTW_TARGET_${CRAY_CPU_TARGET}"
  CRAY_FFTW_PKGCONFIG_PATH=${PE_FFTW_VOLATILE_PKGCONFIG_PATH/@PE_FFTW_TARGET@/${!target}}
  export PKG_CONFIG_PATH=${PKG_CONFIG_PATH}:${CRAY_FFTW_PKGCONFIG_PATH}

  cd "$MAALI_TOOL_BUILD_DIR"

  # cmake likes to build in a directory of it's own
  mkdir "$MAALI_TOOL_NAME-build"
  cd "$MAALI_TOOL_NAME-build"

  maali_run "cmake -DCMAKE_INSTALL_PREFIX=$MAALI_INSTALL_DIR $MAALI_TOOL_CONFIGURE $MAALI_CMAKE_PATH"
  if [ $DEBUG ]; then
    maali_run "make VERBOSE=TRUE"
  else
    maali_run "make"
  fi
  maali_run "make install"

  cd "$MAALI_TOOL_BUILD_DIR"

  # cmake likes to build in a directory of it's own
  mkdir "$MAALI_TOOL_NAME-build-double"
  cd "$MAALI_TOOL_NAME-build-double"

  maali_run "cmake -DGMX_DOUBLE=ON -DCMAKE_INSTALL_PREFIX=$MAALI_INSTALL_DIR $MAALI_TOOL_CONFIGURE $MAALI_CMAKE_PATH"
  if [ $DEBUG ]; then
    maali_run "make VERBOSE=TRUE"
  else
    maali_run "make"
  fi
  maali_run "make install"

}

